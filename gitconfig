[include]
  path = ~/.gitconfig.platform
  path = ~/.gitconfig.private
[merge]
  summary = true
  tool = vimdiff
[core]
  excludesfile = ~/.gitignore
  hookspath = ~/.git_hooks
  preloadindex = true
  fscache = true
[push]
  default = upstream
[diff]
  algorithm = patience
[color]
  diff = auto
  status = auto
  branch = auto
  interactive = auto
  ui = true
  pager = true
[color "branch"]
  current = yellow reverse
  local   = yellow
  remote  = green
[color "diff"]
  meta = blue
  frag = magenta
  old  = red
  new  = green
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  required = true
  process = git-lfs filter-process
[alias]
  # Note: I'm using %ad in the pretty log to see the author's timestamp, as
  # opposed to %cr which is the commiter's timestamp. I prefer the former
  # because I sometimes edit an earlier commit message while rebasing and I
  # want to continue to see the original date.
  #
  # @note If you want a grey that's slightly darker than %C(white dim) then
  # try %C(black bold).
  #

  # Style 1
  #lg = log --graph --pretty=format:'%C(yellow bold)%h %Creset%C(white dim)[%Creset%an%Creset%C(white dim)]%Creset%C(yellow bold)%d %Creset%C(white bold)%s %C(white dim)<%ad|%cr>%Creset' --date=relative

  # Style 2
  # lg = log --graph --pretty=format:'%C(yellow bold)%h [%Creset%an%Creset%C(yellow bold)]%d %Creset%C(white bold)%s %C(white dim)<%ad|%cr>%Creset' --date=relative

  # Style 3
  #lg = log --graph --pretty=format:'%C(yellow bold)%h %Creset<%an> %C(yellow bold)%d %Creset%C(white bold)%s %C(white dim)<%ad|%cr>%Creset' --date=relative

  # Style 4
  # lg = log --graph --pretty=format:'%C(yellow bold)%h %Creset[%an] %C(yellow bold)|%d %Creset%C(white bold)%s %C(white dim)<%ad|%cr>%Creset' --date=relative

  # Style 5
  # lg = log --graph --pretty=format:'%C(yellow bold)%h|%Creset%an%Creset%C(yellow bold)|%d %Creset%C(white bold)%s %C(white dim)<%ad|%cr>%Creset' --date=relative

  # Style 6
  #lg = log --graph --pretty=format:'%C(yellow bold)%h|%Creset%C(yellow dim)%an%Creset%C(yellow bold)|%d %Creset%C(white bold)%s %C(white dim)<%ad|%cr>%Creset' --date=relative

  # Style 7
  #lg = log --graph --pretty=format:'%C(yellow bold)%h %Creset%C(yellow dim)%an %Creset%C(yellow bold)|%d %Creset%C(white bold)%s %C(white dim)[%ad|%cr]%Creset' --date=relative

  # Style 8
  #lg = log --graph --pretty=format:'%C(yellow bold)%h%Creset%C(white dim)|%Creset%an%Creset%C(white dim) >%Creset%C(yellow bold)%d %Creset%C(white bold)%s %C(white dim)<%ad|%cr>%Creset' --date=relative

  # Style 9
  lg = log --graph --pretty=format:'%C(yellow bold)%h%C(black bold)|%C(white dim)%an%Creset%C(yellow bold) >%d %Creset%C(white bold)%s %C(black bold)<%ad|%cr>%Creset' --date=relative

  # Style 10
  #lg = log --graph --pretty=format:'%C(yellow bold)%h %Creset%C(yellow dim)%an%Creset%C(yellow bold) >%d %Creset%C(white bold)%s %C(white dim)<%ad|%cr>%Creset' --date=relative

  start = !git init && git commit --allow-empty -m \"Initial commit\"
[rerere]
  enabled = true
[gc]
  auto = 0
[advice]
  detachedHead = false
